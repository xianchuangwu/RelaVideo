apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 23
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23

        versionCode = 9
        versionName = "1.4.0"

        externalNativeBuild {
            ndkBuild {
            }
        }
        ndk {
            // moduleName "gpuimage-library"
            stl "gnustl_shared"
            abiFilters "armeabi-v7a","arm64-v8a"
            ldLibs "log"
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jni.srcDirs = ['jni']
        }

        instrumentTest.setRoot('tests')
    }

    lintOptions {
        abortOnError false
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }

    android.libraryVariants.all { variant ->
        if (variant.buildType.isDebuggable()) {
            return; // Skip debug builds.
        }
        task("javadoc${variant.name.capitalize()}", type: Javadoc) {
            description "Generates Javadoc for $variant.name."
            source = variant.javaCompile.source
            ext.androidJar = System.getenv("ANDROID_HOME") + "/platforms/${android.compileSdkVersion}/android.jar"
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        }

        task("bundleJavadoc${variant.name.capitalize()}", type: Jar) {
            description "Bundles Javadoc into zip for $variant.name."
            classifier = "javadoc"
            from tasks["javadoc${variant.name.capitalize()}"]
        }
    }
}

// apply from: 'android-artifacts.gradle'
// apply from: 'central-publish.gradle'